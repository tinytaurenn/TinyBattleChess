// Copyright (c) coherence ApS.
// For all coherence generated code, the coherence SDK license terms apply. See the license file in the coherence Package root folder for more information.

// <auto-generated>
// Generated file. DO NOT EDIT!
// </auto-generated>
namespace Coherence.Generated
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using UnityEngine;
    using Coherence.Toolkit;
    using Coherence.Toolkit.Bindings;
    using Coherence.Entities;
    using Coherence.ProtocolDef;
    using Coherence.Brook;
    using Coherence.Toolkit.Bindings.ValueBindings;
    using Coherence.Toolkit.Bindings.TransformBindings;
    using Coherence.Connection;
    using Coherence.SimulationFrame;
    using Coherence.Interpolation;
    using Coherence.Log;
    using Logger = Coherence.Log.Logger;
    using UnityEngine.Scripting;
    
    [UnityEngine.Scripting.Preserve]
    public class Binding_775a962259beb2f48b64b79887dce771_44b8f5276aae4c39b4e5fac14bf443a2 : PositionBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(WorldPosition);
        public override string CoherenceComponentName => "WorldPosition";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override UnityEngine.Vector3 Value
        {
            get { return (UnityEngine.Vector3)(coherenceSync.coherencePosition); }
            set { coherenceSync.coherencePosition = (UnityEngine.Vector3)(value); }
        }

        protected override (UnityEngine.Vector3 value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((WorldPosition)coherenceComponent).value;
            if (!coherenceSync.HasParentWithCoherenceSync) { value += floatingOriginDelta; }

            var simFrame = ((WorldPosition)coherenceComponent).valueSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (WorldPosition)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.value = Value;
            }
            else
            {
                update.value = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.valueSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new WorldPosition();
        }    
    }
    
    [UnityEngine.Scripting.Preserve]
    public class Binding_775a962259beb2f48b64b79887dce771_451590f3ac13426ea7a961dd86b1f65f : RotationBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(WorldOrientation);
        public override string CoherenceComponentName => "WorldOrientation";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override UnityEngine.Quaternion Value
        {
            get { return (UnityEngine.Quaternion)(coherenceSync.coherenceRotation); }
            set { coherenceSync.coherenceRotation = (UnityEngine.Quaternion)(value); }
        }

        protected override (UnityEngine.Quaternion value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((WorldOrientation)coherenceComponent).value;

            var simFrame = ((WorldOrientation)coherenceComponent).valueSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (WorldOrientation)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.value = Value;
            }
            else
            {
                update.value = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.valueSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new WorldOrientation();
        }    
    }
    
    [UnityEngine.Scripting.Preserve]
    public class Binding_775a962259beb2f48b64b79887dce771_3053dbccea2d4131aa42bf7ae8da1b49 : ScaleBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(GenericScale);
        public override string CoherenceComponentName => "GenericScale";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override UnityEngine.Vector3 Value
        {
            get { return (UnityEngine.Vector3)(coherenceSync.coherenceLocalScale); }
            set { coherenceSync.coherenceLocalScale = (UnityEngine.Vector3)(value); }
        }

        protected override (UnityEngine.Vector3 value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((GenericScale)coherenceComponent).value;

            var simFrame = ((GenericScale)coherenceComponent).valueSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (GenericScale)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.value = Value;
            }
            else
            {
                update.value = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.valueSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new GenericScale();
        }    
    }
    
    [UnityEngine.Scripting.Preserve]
    public class Binding_775a962259beb2f48b64b79887dce771_9a10d42ba489471497542bdb2b573f40 : StringBinding
    {   
        private global::Coherence.Toolkit.CoherenceNode CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::Coherence.Toolkit.CoherenceNode)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_775a962259beb2f48b64b79887dce771_9024384128650397308);
        public override string CoherenceComponentName => "_775a962259beb2f48b64b79887dce771_9024384128650397308";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override System.String Value
        {
            get { return (System.String)(CastedUnityComponent.path); }
            set { CastedUnityComponent.path = (System.String)(value); }
        }

        protected override (System.String value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_775a962259beb2f48b64b79887dce771_9024384128650397308)coherenceComponent).path;

            var simFrame = ((_775a962259beb2f48b64b79887dce771_9024384128650397308)coherenceComponent).pathSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_775a962259beb2f48b64b79887dce771_9024384128650397308)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.path = Value;
            }
            else
            {
                update.path = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.pathSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _775a962259beb2f48b64b79887dce771_9024384128650397308();
        }    
    }
    
    [UnityEngine.Scripting.Preserve]
    public class Binding_775a962259beb2f48b64b79887dce771_5e25001021d2490f98ae9a7e4e7cfd9b : IntBinding
    {   
        private global::Coherence.Toolkit.CoherenceNode CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::Coherence.Toolkit.CoherenceNode)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_775a962259beb2f48b64b79887dce771_9024384128650397308);
        public override string CoherenceComponentName => "_775a962259beb2f48b64b79887dce771_9024384128650397308";
        public override uint FieldMask => 0b00000000000000000000000000000010;

        public override System.Int32 Value
        {
            get { return (System.Int32)(CastedUnityComponent.pathDirtyCounter); }
            set { CastedUnityComponent.pathDirtyCounter = (System.Int32)(value); }
        }

        protected override (System.Int32 value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_775a962259beb2f48b64b79887dce771_9024384128650397308)coherenceComponent).pathDirtyCounter;

            var simFrame = ((_775a962259beb2f48b64b79887dce771_9024384128650397308)coherenceComponent).pathDirtyCounterSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_775a962259beb2f48b64b79887dce771_9024384128650397308)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.pathDirtyCounter = Value;
            }
            else
            {
                update.pathDirtyCounter = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.pathDirtyCounterSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _775a962259beb2f48b64b79887dce771_9024384128650397308();
        }    
    }
    
    [UnityEngine.Scripting.Preserve]
    public class Binding_775a962259beb2f48b64b79887dce771_93dff10e153b45ad8573962e7a6dc90c : BoolBinding
    {   
        private global::UnityEngine.MeshRenderer CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.MeshRenderer)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_775a962259beb2f48b64b79887dce771_4486487952480385274);
        public override string CoherenceComponentName => "_775a962259beb2f48b64b79887dce771_4486487952480385274";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override System.Boolean Value
        {
            get { return (System.Boolean)(CastedUnityComponent.enabled); }
            set { CastedUnityComponent.enabled = (System.Boolean)(value); }
        }

        protected override (System.Boolean value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_775a962259beb2f48b64b79887dce771_4486487952480385274)coherenceComponent).enabled;

            var simFrame = ((_775a962259beb2f48b64b79887dce771_4486487952480385274)coherenceComponent).enabledSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_775a962259beb2f48b64b79887dce771_4486487952480385274)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.enabled = Value;
            }
            else
            {
                update.enabled = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.enabledSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _775a962259beb2f48b64b79887dce771_4486487952480385274();
        }    
    }
    
    [UnityEngine.Scripting.Preserve]
    public class Binding_775a962259beb2f48b64b79887dce771_ef8f4baa94db4d389e701e3829473c95 : BoolBinding
    {   
        private global::Potion CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::Potion)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_775a962259beb2f48b64b79887dce771_2126962496601302669);
        public override string CoherenceComponentName => "_775a962259beb2f48b64b79887dce771_2126962496601302669";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override System.Boolean Value
        {
            get { return (System.Boolean)(CastedUnityComponent.m_IsHeld); }
            set { CastedUnityComponent.m_IsHeld = (System.Boolean)(value); }
        }

        protected override (System.Boolean value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_775a962259beb2f48b64b79887dce771_2126962496601302669)coherenceComponent).m_IsHeld;

            var simFrame = ((_775a962259beb2f48b64b79887dce771_2126962496601302669)coherenceComponent).m_IsHeldSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_775a962259beb2f48b64b79887dce771_2126962496601302669)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.m_IsHeld = Value;
            }
            else
            {
                update.m_IsHeld = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.m_IsHeldSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _775a962259beb2f48b64b79887dce771_2126962496601302669();
        }    
    }
    
    [UnityEngine.Scripting.Preserve]
    public class Binding_775a962259beb2f48b64b79887dce771_89fc014216774e1891226b5e7913b732 : BoolBinding
    {   
        private global::Potion CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::Potion)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_775a962259beb2f48b64b79887dce771_2126962496601302669);
        public override string CoherenceComponentName => "_775a962259beb2f48b64b79887dce771_2126962496601302669";
        public override uint FieldMask => 0b00000000000000000000000000000010;

        public override System.Boolean Value
        {
            get { return (System.Boolean)(CastedUnityComponent.IsNPCHeld); }
            set { CastedUnityComponent.IsNPCHeld = (System.Boolean)(value); }
        }

        protected override (System.Boolean value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_775a962259beb2f48b64b79887dce771_2126962496601302669)coherenceComponent).IsNPCHeld;

            var simFrame = ((_775a962259beb2f48b64b79887dce771_2126962496601302669)coherenceComponent).IsNPCHeldSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_775a962259beb2f48b64b79887dce771_2126962496601302669)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.IsNPCHeld = Value;
            }
            else
            {
                update.IsNPCHeld = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.IsNPCHeldSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _775a962259beb2f48b64b79887dce771_2126962496601302669();
        }    
    }
    
    [UnityEngine.Scripting.Preserve]
    public class Binding_775a962259beb2f48b64b79887dce771_691bf4e65bf24d98b5d6104def940bec : BoolBinding
    {   
        private global::UnityEngine.Rigidbody CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Rigidbody)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_775a962259beb2f48b64b79887dce771_277023309556421205);
        public override string CoherenceComponentName => "_775a962259beb2f48b64b79887dce771_277023309556421205";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override System.Boolean Value
        {
            get { return (System.Boolean)(CastedUnityComponent.isKinematic); }
            set { CastedUnityComponent.isKinematic = (System.Boolean)(value); }
        }

        protected override (System.Boolean value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_775a962259beb2f48b64b79887dce771_277023309556421205)coherenceComponent).isKinematic;

            var simFrame = ((_775a962259beb2f48b64b79887dce771_277023309556421205)coherenceComponent).isKinematicSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_775a962259beb2f48b64b79887dce771_277023309556421205)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.isKinematic = Value;
            }
            else
            {
                update.isKinematic = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.isKinematicSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _775a962259beb2f48b64b79887dce771_277023309556421205();
        }    
    }
    
    [UnityEngine.Scripting.Preserve]
    public class Binding_775a962259beb2f48b64b79887dce771_2a8dc2a5e01e4fcc87ca0225207f4718 : BoolBinding
    {   
        private global::UnityEngine.BoxCollider CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.BoxCollider)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_775a962259beb2f48b64b79887dce771_1934004787042426134);
        public override string CoherenceComponentName => "_775a962259beb2f48b64b79887dce771_1934004787042426134";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override System.Boolean Value
        {
            get { return (System.Boolean)(CastedUnityComponent.enabled); }
            set { CastedUnityComponent.enabled = (System.Boolean)(value); }
        }

        protected override (System.Boolean value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_775a962259beb2f48b64b79887dce771_1934004787042426134)coherenceComponent).enabled;

            var simFrame = ((_775a962259beb2f48b64b79887dce771_1934004787042426134)coherenceComponent).enabledSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_775a962259beb2f48b64b79887dce771_1934004787042426134)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.enabled = Value;
            }
            else
            {
                update.enabled = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.enabledSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _775a962259beb2f48b64b79887dce771_1934004787042426134();
        }    
    }

    [UnityEngine.Scripting.Preserve]
    public class CoherenceSync_775a962259beb2f48b64b79887dce771 : CoherenceSyncBaked
    {
        private Entity entityId;
        private Logger logger = Coherence.Log.Log.GetLogger<CoherenceSync_775a962259beb2f48b64b79887dce771>();
        
        private global::Grabbable _775a962259beb2f48b64b79887dce771_097952f827fc4b1a8e080190d4ebe197_CommandTarget;
        private global::Grabbable _775a962259beb2f48b64b79887dce771_d894641959d14704a986fb13f70c8242_CommandTarget;
        
        
        private IClient client;
        private CoherenceBridge bridge;
        
        private readonly Dictionary<string, Binding> bakedValueBindings = new Dictionary<string, Binding>()
        {
            ["44b8f5276aae4c39b4e5fac14bf443a2"] = new Binding_775a962259beb2f48b64b79887dce771_44b8f5276aae4c39b4e5fac14bf443a2(),
            ["451590f3ac13426ea7a961dd86b1f65f"] = new Binding_775a962259beb2f48b64b79887dce771_451590f3ac13426ea7a961dd86b1f65f(),
            ["3053dbccea2d4131aa42bf7ae8da1b49"] = new Binding_775a962259beb2f48b64b79887dce771_3053dbccea2d4131aa42bf7ae8da1b49(),
            ["9a10d42ba489471497542bdb2b573f40"] = new Binding_775a962259beb2f48b64b79887dce771_9a10d42ba489471497542bdb2b573f40(),
            ["5e25001021d2490f98ae9a7e4e7cfd9b"] = new Binding_775a962259beb2f48b64b79887dce771_5e25001021d2490f98ae9a7e4e7cfd9b(),
            ["93dff10e153b45ad8573962e7a6dc90c"] = new Binding_775a962259beb2f48b64b79887dce771_93dff10e153b45ad8573962e7a6dc90c(),
            ["ef8f4baa94db4d389e701e3829473c95"] = new Binding_775a962259beb2f48b64b79887dce771_ef8f4baa94db4d389e701e3829473c95(),
            ["89fc014216774e1891226b5e7913b732"] = new Binding_775a962259beb2f48b64b79887dce771_89fc014216774e1891226b5e7913b732(),
            ["691bf4e65bf24d98b5d6104def940bec"] = new Binding_775a962259beb2f48b64b79887dce771_691bf4e65bf24d98b5d6104def940bec(),
            ["2a8dc2a5e01e4fcc87ca0225207f4718"] = new Binding_775a962259beb2f48b64b79887dce771_2a8dc2a5e01e4fcc87ca0225207f4718(),
        };
        
        private Dictionary<string, Action<CommandBinding, CommandsHandler>> bakedCommandBindings = new Dictionary<string, Action<CommandBinding, CommandsHandler>>();
        
        public CoherenceSync_775a962259beb2f48b64b79887dce771()
        {
            bakedCommandBindings.Add("097952f827fc4b1a8e080190d4ebe197", BakeCommandBinding__775a962259beb2f48b64b79887dce771_097952f827fc4b1a8e080190d4ebe197);
            bakedCommandBindings.Add("d894641959d14704a986fb13f70c8242", BakeCommandBinding__775a962259beb2f48b64b79887dce771_d894641959d14704a986fb13f70c8242);
        }
        
        public override Binding BakeValueBinding(Binding valueBinding)
        {
            if (bakedValueBindings.TryGetValue(valueBinding.guid, out var bakedBinding))
            {
                valueBinding.CloneTo(bakedBinding);
                return bakedBinding;
            }
            
            return null;
        }
        
        public override void BakeCommandBinding(CommandBinding commandBinding, CommandsHandler commandsHandler)
        {
            if (bakedCommandBindings.TryGetValue(commandBinding.guid, out var commandBindingBaker))
            {
                commandBindingBaker.Invoke(commandBinding, commandsHandler);
            }
        }
    
        private void BakeCommandBinding__775a962259beb2f48b64b79887dce771_097952f827fc4b1a8e080190d4ebe197(CommandBinding commandBinding, CommandsHandler commandsHandler)
        {
            _775a962259beb2f48b64b79887dce771_097952f827fc4b1a8e080190d4ebe197_CommandTarget = (global::Grabbable)commandBinding.UnityComponent;
            commandsHandler.AddBakedCommand("Grabbable.EnableComponent", "(System.Boolean)", SendCommand__775a962259beb2f48b64b79887dce771_097952f827fc4b1a8e080190d4ebe197, ReceiveLocalCommand__775a962259beb2f48b64b79887dce771_097952f827fc4b1a8e080190d4ebe197, MessageTarget.All, _775a962259beb2f48b64b79887dce771_097952f827fc4b1a8e080190d4ebe197_CommandTarget, false);
        }
        
        private void SendCommand__775a962259beb2f48b64b79887dce771_097952f827fc4b1a8e080190d4ebe197(MessageTarget target, ChannelID channelID, object[] args)
        {
            var command = new _775a962259beb2f48b64b79887dce771_097952f827fc4b1a8e080190d4ebe197();
            
            int i = 0;
            command.enable = (System.Boolean)args[i++];
        
            client.SendCommand(command, target, entityId, channelID);
        }
        
        private void ReceiveLocalCommand__775a962259beb2f48b64b79887dce771_097952f827fc4b1a8e080190d4ebe197(MessageTarget target, ChannelID _, object[] args)
        {
            var command = new _775a962259beb2f48b64b79887dce771_097952f827fc4b1a8e080190d4ebe197();
            
            int i = 0;
            command.enable = (System.Boolean)args[i++];
            
            ReceiveCommand__775a962259beb2f48b64b79887dce771_097952f827fc4b1a8e080190d4ebe197(command);
        }

        private void ReceiveCommand__775a962259beb2f48b64b79887dce771_097952f827fc4b1a8e080190d4ebe197(_775a962259beb2f48b64b79887dce771_097952f827fc4b1a8e080190d4ebe197 command)
        {
            var target = _775a962259beb2f48b64b79887dce771_097952f827fc4b1a8e080190d4ebe197_CommandTarget;
            
            target.EnableComponent((System.Boolean)(command.enable));
        }
    
        private void BakeCommandBinding__775a962259beb2f48b64b79887dce771_d894641959d14704a986fb13f70c8242(CommandBinding commandBinding, CommandsHandler commandsHandler)
        {
            _775a962259beb2f48b64b79887dce771_d894641959d14704a986fb13f70c8242_CommandTarget = (global::Grabbable)commandBinding.UnityComponent;
            commandsHandler.AddBakedCommand("Grabbable.DestroyGrabbable", "()", SendCommand__775a962259beb2f48b64b79887dce771_d894641959d14704a986fb13f70c8242, ReceiveLocalCommand__775a962259beb2f48b64b79887dce771_d894641959d14704a986fb13f70c8242, MessageTarget.All, _775a962259beb2f48b64b79887dce771_d894641959d14704a986fb13f70c8242_CommandTarget, false);
        }
        
        private void SendCommand__775a962259beb2f48b64b79887dce771_d894641959d14704a986fb13f70c8242(MessageTarget target, ChannelID channelID, object[] args)
        {
            var command = new _775a962259beb2f48b64b79887dce771_d894641959d14704a986fb13f70c8242();
            
        
            client.SendCommand(command, target, entityId, channelID);
        }
        
        private void ReceiveLocalCommand__775a962259beb2f48b64b79887dce771_d894641959d14704a986fb13f70c8242(MessageTarget target, ChannelID _, object[] args)
        {
            var command = new _775a962259beb2f48b64b79887dce771_d894641959d14704a986fb13f70c8242();
            
            
            ReceiveCommand__775a962259beb2f48b64b79887dce771_d894641959d14704a986fb13f70c8242(command);
        }

        private void ReceiveCommand__775a962259beb2f48b64b79887dce771_d894641959d14704a986fb13f70c8242(_775a962259beb2f48b64b79887dce771_d894641959d14704a986fb13f70c8242 command)
        {
            var target = _775a962259beb2f48b64b79887dce771_d894641959d14704a986fb13f70c8242_CommandTarget;
            
            target.DestroyGrabbable();
        }
        
        public override void ReceiveCommand(IEntityCommand command)
        {
            switch (command)
            {
                case _775a962259beb2f48b64b79887dce771_097952f827fc4b1a8e080190d4ebe197 castedCommand:
                    ReceiveCommand__775a962259beb2f48b64b79887dce771_097952f827fc4b1a8e080190d4ebe197(castedCommand);
                    break;
                case _775a962259beb2f48b64b79887dce771_d894641959d14704a986fb13f70c8242 castedCommand:
                    ReceiveCommand__775a962259beb2f48b64b79887dce771_d894641959d14704a986fb13f70c8242(castedCommand);
                    break;
                default:
                    logger.Warning(Coherence.Log.Warning.ToolkitBakedSyncReceiveCommandUnhandled,
                        $"CoherenceSync_775a962259beb2f48b64b79887dce771 Unhandled command: {command.GetType()}.");
                    break;
            }
        }
        
        public override List<ICoherenceComponentData> CreateEntity(bool usesLodsAtRuntime, string archetypeName, AbsoluteSimulationFrame simFrame)
        {
            if (!usesLodsAtRuntime)
            {
                return null;
            }
            
            if (Archetypes.IndexForName.TryGetValue(archetypeName, out int archetypeIndex))
            {
                var components = new List<ICoherenceComponentData>()
                {
                    new ArchetypeComponent
                    {
                        index = archetypeIndex,
                        indexSimulationFrame = simFrame,
                        FieldsMask = 0b1
                    }
                };

                return components;
            }
    
            logger.Warning(Coherence.Log.Warning.ToolkitBakedSyncCreateEntityMissingArchetype,
                $"Unable to find archetype {archetypeName} in dictionary. Please, bake manually (coherence > Bake)");
            
            return null;
        }
        
        public override void Dispose()
        {
        }
        
        public override void Initialize(Entity entityId, CoherenceBridge bridge, IClient client, CoherenceInput input, Logger logger)
        {
            this.logger = logger.With<CoherenceSync_775a962259beb2f48b64b79887dce771>();
            this.bridge = bridge;
            this.entityId = entityId;
            this.client = client;        
        }
    }
}
