// Copyright (c) coherence ApS.
// For all coherence generated code, the coherence SDK license terms apply. See the license file in the coherence Package root folder for more information.

// <auto-generated>
// Generated file. DO NOT EDIT!
// </auto-generated>
namespace Coherence.Generated
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using UnityEngine;
    using Coherence.Toolkit;
    using Coherence.Toolkit.Bindings;
    using Coherence.Entities;
    using Coherence.ProtocolDef;
    using Coherence.Brook;
    using Coherence.Toolkit.Bindings.ValueBindings;
    using Coherence.Toolkit.Bindings.TransformBindings;
    using Coherence.Connection;
    using Coherence.SimulationFrame;
    using Coherence.Interpolation;
    using Coherence.Log;
    using Logger = Coherence.Log.Logger;
    using UnityEngine.Scripting;
    
    [UnityEngine.Scripting.Preserve]
    public class Binding_ebe3c005c8a4429419dab111d22f160c_a09016d912e543f9ad3e7ea467d6066f : PositionBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(WorldPosition);
        public override string CoherenceComponentName => "WorldPosition";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override UnityEngine.Vector3 Value
        {
            get { return (UnityEngine.Vector3)(coherenceSync.coherencePosition); }
            set { coherenceSync.coherencePosition = (UnityEngine.Vector3)(value); }
        }

        protected override (UnityEngine.Vector3 value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((WorldPosition)coherenceComponent).value;
            if (!coherenceSync.HasParentWithCoherenceSync) { value += floatingOriginDelta; }

            var simFrame = ((WorldPosition)coherenceComponent).valueSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (WorldPosition)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.value = Value;
            }
            else
            {
                update.value = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.valueSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new WorldPosition();
        }    
    }
    
    [UnityEngine.Scripting.Preserve]
    public class Binding_ebe3c005c8a4429419dab111d22f160c_54d8dae041c44fb09d85119dc8733e06 : RotationBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(WorldOrientation);
        public override string CoherenceComponentName => "WorldOrientation";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override UnityEngine.Quaternion Value
        {
            get { return (UnityEngine.Quaternion)(coherenceSync.coherenceRotation); }
            set { coherenceSync.coherenceRotation = (UnityEngine.Quaternion)(value); }
        }

        protected override (UnityEngine.Quaternion value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((WorldOrientation)coherenceComponent).value;

            var simFrame = ((WorldOrientation)coherenceComponent).valueSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (WorldOrientation)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.value = Value;
            }
            else
            {
                update.value = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.valueSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new WorldOrientation();
        }    
    }
    
    [UnityEngine.Scripting.Preserve]
    public class Binding_ebe3c005c8a4429419dab111d22f160c_ecaf09d4ac3642cab69ddd9105338288 : ScaleBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(GenericScale);
        public override string CoherenceComponentName => "GenericScale";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override UnityEngine.Vector3 Value
        {
            get { return (UnityEngine.Vector3)(coherenceSync.coherenceLocalScale); }
            set { coherenceSync.coherenceLocalScale = (UnityEngine.Vector3)(value); }
        }

        protected override (UnityEngine.Vector3 value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((GenericScale)coherenceComponent).value;

            var simFrame = ((GenericScale)coherenceComponent).valueSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (GenericScale)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.value = Value;
            }
            else
            {
                update.value = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.valueSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new GenericScale();
        }    
    }
    
    [UnityEngine.Scripting.Preserve]
    public class Binding_ebe3c005c8a4429419dab111d22f160c_f3cf07e806204412a642c136fc6e8492 : StringBinding
    {   
        private global::Coherence.Toolkit.CoherenceNode CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::Coherence.Toolkit.CoherenceNode)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_ebe3c005c8a4429419dab111d22f160c_8923926967690582782);
        public override string CoherenceComponentName => "_ebe3c005c8a4429419dab111d22f160c_8923926967690582782";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override System.String Value
        {
            get { return (System.String)(CastedUnityComponent.path); }
            set { CastedUnityComponent.path = (System.String)(value); }
        }

        protected override (System.String value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_ebe3c005c8a4429419dab111d22f160c_8923926967690582782)coherenceComponent).path;

            var simFrame = ((_ebe3c005c8a4429419dab111d22f160c_8923926967690582782)coherenceComponent).pathSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_ebe3c005c8a4429419dab111d22f160c_8923926967690582782)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.path = Value;
            }
            else
            {
                update.path = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.pathSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _ebe3c005c8a4429419dab111d22f160c_8923926967690582782();
        }    
    }
    
    [UnityEngine.Scripting.Preserve]
    public class Binding_ebe3c005c8a4429419dab111d22f160c_581ec27c46984a979ca1a0130fbc967f : IntBinding
    {   
        private global::Coherence.Toolkit.CoherenceNode CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::Coherence.Toolkit.CoherenceNode)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_ebe3c005c8a4429419dab111d22f160c_8923926967690582782);
        public override string CoherenceComponentName => "_ebe3c005c8a4429419dab111d22f160c_8923926967690582782";
        public override uint FieldMask => 0b00000000000000000000000000000010;

        public override System.Int32 Value
        {
            get { return (System.Int32)(CastedUnityComponent.pathDirtyCounter); }
            set { CastedUnityComponent.pathDirtyCounter = (System.Int32)(value); }
        }

        protected override (System.Int32 value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_ebe3c005c8a4429419dab111d22f160c_8923926967690582782)coherenceComponent).pathDirtyCounter;

            var simFrame = ((_ebe3c005c8a4429419dab111d22f160c_8923926967690582782)coherenceComponent).pathDirtyCounterSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_ebe3c005c8a4429419dab111d22f160c_8923926967690582782)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.pathDirtyCounter = Value;
            }
            else
            {
                update.pathDirtyCounter = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.pathDirtyCounterSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _ebe3c005c8a4429419dab111d22f160c_8923926967690582782();
        }    
    }
    
    [UnityEngine.Scripting.Preserve]
    public class Binding_ebe3c005c8a4429419dab111d22f160c_ba5432a1abfd4a3eb3613f0099dce497 : BoolBinding
    {   
        private global::UnityEngine.MeshRenderer CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.MeshRenderer)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_ebe3c005c8a4429419dab111d22f160c_4025658085450113105);
        public override string CoherenceComponentName => "_ebe3c005c8a4429419dab111d22f160c_4025658085450113105";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override System.Boolean Value
        {
            get { return (System.Boolean)(CastedUnityComponent.enabled); }
            set { CastedUnityComponent.enabled = (System.Boolean)(value); }
        }

        protected override (System.Boolean value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_ebe3c005c8a4429419dab111d22f160c_4025658085450113105)coherenceComponent).enabled;

            var simFrame = ((_ebe3c005c8a4429419dab111d22f160c_4025658085450113105)coherenceComponent).enabledSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_ebe3c005c8a4429419dab111d22f160c_4025658085450113105)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.enabled = Value;
            }
            else
            {
                update.enabled = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.enabledSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _ebe3c005c8a4429419dab111d22f160c_4025658085450113105();
        }    
    }
    
    [UnityEngine.Scripting.Preserve]
    public class Binding_ebe3c005c8a4429419dab111d22f160c_bea920db55c64532b1d2ebbba921a46d : BoolBinding
    {   
        private global::Potion CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::Potion)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_ebe3c005c8a4429419dab111d22f160c_2234337059430967768);
        public override string CoherenceComponentName => "_ebe3c005c8a4429419dab111d22f160c_2234337059430967768";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override System.Boolean Value
        {
            get { return (System.Boolean)(CastedUnityComponent.m_IsHeld); }
            set { CastedUnityComponent.m_IsHeld = (System.Boolean)(value); }
        }

        protected override (System.Boolean value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_ebe3c005c8a4429419dab111d22f160c_2234337059430967768)coherenceComponent).m_IsHeld;

            var simFrame = ((_ebe3c005c8a4429419dab111d22f160c_2234337059430967768)coherenceComponent).m_IsHeldSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_ebe3c005c8a4429419dab111d22f160c_2234337059430967768)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.m_IsHeld = Value;
            }
            else
            {
                update.m_IsHeld = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.m_IsHeldSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _ebe3c005c8a4429419dab111d22f160c_2234337059430967768();
        }    
    }
    
    [UnityEngine.Scripting.Preserve]
    public class Binding_ebe3c005c8a4429419dab111d22f160c_5836c08b32774244a53a54f9febe0621 : BoolBinding
    {   
        private global::Potion CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::Potion)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_ebe3c005c8a4429419dab111d22f160c_2234337059430967768);
        public override string CoherenceComponentName => "_ebe3c005c8a4429419dab111d22f160c_2234337059430967768";
        public override uint FieldMask => 0b00000000000000000000000000000010;

        public override System.Boolean Value
        {
            get { return (System.Boolean)(CastedUnityComponent.IsNPCHeld); }
            set { CastedUnityComponent.IsNPCHeld = (System.Boolean)(value); }
        }

        protected override (System.Boolean value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_ebe3c005c8a4429419dab111d22f160c_2234337059430967768)coherenceComponent).IsNPCHeld;

            var simFrame = ((_ebe3c005c8a4429419dab111d22f160c_2234337059430967768)coherenceComponent).IsNPCHeldSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_ebe3c005c8a4429419dab111d22f160c_2234337059430967768)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.IsNPCHeld = Value;
            }
            else
            {
                update.IsNPCHeld = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.IsNPCHeldSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _ebe3c005c8a4429419dab111d22f160c_2234337059430967768();
        }    
    }
    
    [UnityEngine.Scripting.Preserve]
    public class Binding_ebe3c005c8a4429419dab111d22f160c_4ae2bbd70cef4135a9d03c2879b2f751 : BoolBinding
    {   
        private global::UnityEngine.BoxCollider CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.BoxCollider)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_ebe3c005c8a4429419dab111d22f160c_5798973653603864835);
        public override string CoherenceComponentName => "_ebe3c005c8a4429419dab111d22f160c_5798973653603864835";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override System.Boolean Value
        {
            get { return (System.Boolean)(CastedUnityComponent.enabled); }
            set { CastedUnityComponent.enabled = (System.Boolean)(value); }
        }

        protected override (System.Boolean value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_ebe3c005c8a4429419dab111d22f160c_5798973653603864835)coherenceComponent).enabled;

            var simFrame = ((_ebe3c005c8a4429419dab111d22f160c_5798973653603864835)coherenceComponent).enabledSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_ebe3c005c8a4429419dab111d22f160c_5798973653603864835)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.enabled = Value;
            }
            else
            {
                update.enabled = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.enabledSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _ebe3c005c8a4429419dab111d22f160c_5798973653603864835();
        }    
    }
    
    [UnityEngine.Scripting.Preserve]
    public class Binding_ebe3c005c8a4429419dab111d22f160c_85265ef7cf804eb5880818a831db33eb : BoolBinding
    {   
        private global::UnityEngine.Rigidbody CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Rigidbody)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_ebe3c005c8a4429419dab111d22f160c_2668675485594391575);
        public override string CoherenceComponentName => "_ebe3c005c8a4429419dab111d22f160c_2668675485594391575";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override System.Boolean Value
        {
            get { return (System.Boolean)(CastedUnityComponent.isKinematic); }
            set { CastedUnityComponent.isKinematic = (System.Boolean)(value); }
        }

        protected override (System.Boolean value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_ebe3c005c8a4429419dab111d22f160c_2668675485594391575)coherenceComponent).isKinematic;

            var simFrame = ((_ebe3c005c8a4429419dab111d22f160c_2668675485594391575)coherenceComponent).isKinematicSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_ebe3c005c8a4429419dab111d22f160c_2668675485594391575)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.isKinematic = Value;
            }
            else
            {
                update.isKinematic = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.isKinematicSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _ebe3c005c8a4429419dab111d22f160c_2668675485594391575();
        }    
    }

    [UnityEngine.Scripting.Preserve]
    public class CoherenceSync_ebe3c005c8a4429419dab111d22f160c : CoherenceSyncBaked
    {
        private Entity entityId;
        private Logger logger = Coherence.Log.Log.GetLogger<CoherenceSync_ebe3c005c8a4429419dab111d22f160c>();
        
        private global::Grabbable _ebe3c005c8a4429419dab111d22f160c_5815926e10d74fb4996289fd5de6beb0_CommandTarget;
        private global::Grabbable _ebe3c005c8a4429419dab111d22f160c_8db823b96db1417389361e5a11146e5f_CommandTarget;
        
        
        private IClient client;
        private CoherenceBridge bridge;
        
        private readonly Dictionary<string, Binding> bakedValueBindings = new Dictionary<string, Binding>()
        {
            ["a09016d912e543f9ad3e7ea467d6066f"] = new Binding_ebe3c005c8a4429419dab111d22f160c_a09016d912e543f9ad3e7ea467d6066f(),
            ["54d8dae041c44fb09d85119dc8733e06"] = new Binding_ebe3c005c8a4429419dab111d22f160c_54d8dae041c44fb09d85119dc8733e06(),
            ["ecaf09d4ac3642cab69ddd9105338288"] = new Binding_ebe3c005c8a4429419dab111d22f160c_ecaf09d4ac3642cab69ddd9105338288(),
            ["f3cf07e806204412a642c136fc6e8492"] = new Binding_ebe3c005c8a4429419dab111d22f160c_f3cf07e806204412a642c136fc6e8492(),
            ["581ec27c46984a979ca1a0130fbc967f"] = new Binding_ebe3c005c8a4429419dab111d22f160c_581ec27c46984a979ca1a0130fbc967f(),
            ["ba5432a1abfd4a3eb3613f0099dce497"] = new Binding_ebe3c005c8a4429419dab111d22f160c_ba5432a1abfd4a3eb3613f0099dce497(),
            ["bea920db55c64532b1d2ebbba921a46d"] = new Binding_ebe3c005c8a4429419dab111d22f160c_bea920db55c64532b1d2ebbba921a46d(),
            ["5836c08b32774244a53a54f9febe0621"] = new Binding_ebe3c005c8a4429419dab111d22f160c_5836c08b32774244a53a54f9febe0621(),
            ["4ae2bbd70cef4135a9d03c2879b2f751"] = new Binding_ebe3c005c8a4429419dab111d22f160c_4ae2bbd70cef4135a9d03c2879b2f751(),
            ["85265ef7cf804eb5880818a831db33eb"] = new Binding_ebe3c005c8a4429419dab111d22f160c_85265ef7cf804eb5880818a831db33eb(),
        };
        
        private Dictionary<string, Action<CommandBinding, CommandsHandler>> bakedCommandBindings = new Dictionary<string, Action<CommandBinding, CommandsHandler>>();
        
        public CoherenceSync_ebe3c005c8a4429419dab111d22f160c()
        {
            bakedCommandBindings.Add("5815926e10d74fb4996289fd5de6beb0", BakeCommandBinding__ebe3c005c8a4429419dab111d22f160c_5815926e10d74fb4996289fd5de6beb0);
            bakedCommandBindings.Add("8db823b96db1417389361e5a11146e5f", BakeCommandBinding__ebe3c005c8a4429419dab111d22f160c_8db823b96db1417389361e5a11146e5f);
        }
        
        public override Binding BakeValueBinding(Binding valueBinding)
        {
            if (bakedValueBindings.TryGetValue(valueBinding.guid, out var bakedBinding))
            {
                valueBinding.CloneTo(bakedBinding);
                return bakedBinding;
            }
            
            return null;
        }
        
        public override void BakeCommandBinding(CommandBinding commandBinding, CommandsHandler commandsHandler)
        {
            if (bakedCommandBindings.TryGetValue(commandBinding.guid, out var commandBindingBaker))
            {
                commandBindingBaker.Invoke(commandBinding, commandsHandler);
            }
        }
    
        private void BakeCommandBinding__ebe3c005c8a4429419dab111d22f160c_5815926e10d74fb4996289fd5de6beb0(CommandBinding commandBinding, CommandsHandler commandsHandler)
        {
            _ebe3c005c8a4429419dab111d22f160c_5815926e10d74fb4996289fd5de6beb0_CommandTarget = (global::Grabbable)commandBinding.UnityComponent;
            commandsHandler.AddBakedCommand("Grabbable.EnableComponent", "(System.Boolean)", SendCommand__ebe3c005c8a4429419dab111d22f160c_5815926e10d74fb4996289fd5de6beb0, ReceiveLocalCommand__ebe3c005c8a4429419dab111d22f160c_5815926e10d74fb4996289fd5de6beb0, MessageTarget.All, _ebe3c005c8a4429419dab111d22f160c_5815926e10d74fb4996289fd5de6beb0_CommandTarget, false);
        }
        
        private void SendCommand__ebe3c005c8a4429419dab111d22f160c_5815926e10d74fb4996289fd5de6beb0(MessageTarget target, ChannelID channelID, object[] args)
        {
            var command = new _ebe3c005c8a4429419dab111d22f160c_5815926e10d74fb4996289fd5de6beb0();
            
            int i = 0;
            command.enable = (System.Boolean)args[i++];
        
            client.SendCommand(command, target, entityId, channelID);
        }
        
        private void ReceiveLocalCommand__ebe3c005c8a4429419dab111d22f160c_5815926e10d74fb4996289fd5de6beb0(MessageTarget target, ChannelID _, object[] args)
        {
            var command = new _ebe3c005c8a4429419dab111d22f160c_5815926e10d74fb4996289fd5de6beb0();
            
            int i = 0;
            command.enable = (System.Boolean)args[i++];
            
            ReceiveCommand__ebe3c005c8a4429419dab111d22f160c_5815926e10d74fb4996289fd5de6beb0(command);
        }

        private void ReceiveCommand__ebe3c005c8a4429419dab111d22f160c_5815926e10d74fb4996289fd5de6beb0(_ebe3c005c8a4429419dab111d22f160c_5815926e10d74fb4996289fd5de6beb0 command)
        {
            var target = _ebe3c005c8a4429419dab111d22f160c_5815926e10d74fb4996289fd5de6beb0_CommandTarget;
            
            target.EnableComponent((System.Boolean)(command.enable));
        }
    
        private void BakeCommandBinding__ebe3c005c8a4429419dab111d22f160c_8db823b96db1417389361e5a11146e5f(CommandBinding commandBinding, CommandsHandler commandsHandler)
        {
            _ebe3c005c8a4429419dab111d22f160c_8db823b96db1417389361e5a11146e5f_CommandTarget = (global::Grabbable)commandBinding.UnityComponent;
            commandsHandler.AddBakedCommand("Grabbable.DestroyGrabbable", "()", SendCommand__ebe3c005c8a4429419dab111d22f160c_8db823b96db1417389361e5a11146e5f, ReceiveLocalCommand__ebe3c005c8a4429419dab111d22f160c_8db823b96db1417389361e5a11146e5f, MessageTarget.All, _ebe3c005c8a4429419dab111d22f160c_8db823b96db1417389361e5a11146e5f_CommandTarget, false);
        }
        
        private void SendCommand__ebe3c005c8a4429419dab111d22f160c_8db823b96db1417389361e5a11146e5f(MessageTarget target, ChannelID channelID, object[] args)
        {
            var command = new _ebe3c005c8a4429419dab111d22f160c_8db823b96db1417389361e5a11146e5f();
            
        
            client.SendCommand(command, target, entityId, channelID);
        }
        
        private void ReceiveLocalCommand__ebe3c005c8a4429419dab111d22f160c_8db823b96db1417389361e5a11146e5f(MessageTarget target, ChannelID _, object[] args)
        {
            var command = new _ebe3c005c8a4429419dab111d22f160c_8db823b96db1417389361e5a11146e5f();
            
            
            ReceiveCommand__ebe3c005c8a4429419dab111d22f160c_8db823b96db1417389361e5a11146e5f(command);
        }

        private void ReceiveCommand__ebe3c005c8a4429419dab111d22f160c_8db823b96db1417389361e5a11146e5f(_ebe3c005c8a4429419dab111d22f160c_8db823b96db1417389361e5a11146e5f command)
        {
            var target = _ebe3c005c8a4429419dab111d22f160c_8db823b96db1417389361e5a11146e5f_CommandTarget;
            
            target.DestroyGrabbable();
        }
        
        public override void ReceiveCommand(IEntityCommand command)
        {
            switch (command)
            {
                case _ebe3c005c8a4429419dab111d22f160c_5815926e10d74fb4996289fd5de6beb0 castedCommand:
                    ReceiveCommand__ebe3c005c8a4429419dab111d22f160c_5815926e10d74fb4996289fd5de6beb0(castedCommand);
                    break;
                case _ebe3c005c8a4429419dab111d22f160c_8db823b96db1417389361e5a11146e5f castedCommand:
                    ReceiveCommand__ebe3c005c8a4429419dab111d22f160c_8db823b96db1417389361e5a11146e5f(castedCommand);
                    break;
                default:
                    logger.Warning(Coherence.Log.Warning.ToolkitBakedSyncReceiveCommandUnhandled,
                        $"CoherenceSync_ebe3c005c8a4429419dab111d22f160c Unhandled command: {command.GetType()}.");
                    break;
            }
        }
        
        public override List<ICoherenceComponentData> CreateEntity(bool usesLodsAtRuntime, string archetypeName, AbsoluteSimulationFrame simFrame)
        {
            if (!usesLodsAtRuntime)
            {
                return null;
            }
            
            if (Archetypes.IndexForName.TryGetValue(archetypeName, out int archetypeIndex))
            {
                var components = new List<ICoherenceComponentData>()
                {
                    new ArchetypeComponent
                    {
                        index = archetypeIndex,
                        indexSimulationFrame = simFrame,
                        FieldsMask = 0b1
                    }
                };

                return components;
            }
    
            logger.Warning(Coherence.Log.Warning.ToolkitBakedSyncCreateEntityMissingArchetype,
                $"Unable to find archetype {archetypeName} in dictionary. Please, bake manually (coherence > Bake)");
            
            return null;
        }
        
        public override void Dispose()
        {
        }
        
        public override void Initialize(Entity entityId, CoherenceBridge bridge, IClient client, CoherenceInput input, Logger logger)
        {
            this.logger = logger.With<CoherenceSync_ebe3c005c8a4429419dab111d22f160c>();
            this.bridge = bridge;
            this.entityId = entityId;
            this.client = client;        
        }
    }
}
