// Copyright (c) coherence ApS.
// For all coherence generated code, the coherence SDK license terms apply. See the license file in the coherence Package root folder for more information.

// <auto-generated>
// Generated file. DO NOT EDIT!
// </auto-generated>
namespace Coherence.Generated
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using UnityEngine;
    using Coherence.Toolkit;
    using Coherence.Toolkit.Bindings;
    using Coherence.Entities;
    using Coherence.ProtocolDef;
    using Coherence.Brook;
    using Coherence.Toolkit.Bindings.ValueBindings;
    using Coherence.Toolkit.Bindings.TransformBindings;
    using Coherence.Connection;
    using Coherence.SimulationFrame;
    using Coherence.Interpolation;
    using Coherence.Log;
    using Logger = Coherence.Log.Logger;
    using UnityEngine.Scripting;
    
    [UnityEngine.Scripting.Preserve]
    public class Binding_5bdd7302d83b75e4ea45b36178bc0730_c752379bafee418caf50678f998f503d : PositionBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(WorldPosition);
        public override string CoherenceComponentName => "WorldPosition";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override UnityEngine.Vector3 Value
        {
            get { return (UnityEngine.Vector3)(coherenceSync.coherencePosition); }
            set { coherenceSync.coherencePosition = (UnityEngine.Vector3)(value); }
        }

        protected override (UnityEngine.Vector3 value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((WorldPosition)coherenceComponent).value;
            if (!coherenceSync.HasParentWithCoherenceSync) { value += floatingOriginDelta; }

            var simFrame = ((WorldPosition)coherenceComponent).valueSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (WorldPosition)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.value = Value;
            }
            else
            {
                update.value = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.valueSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new WorldPosition();
        }    
    }
    
    [UnityEngine.Scripting.Preserve]
    public class Binding_5bdd7302d83b75e4ea45b36178bc0730_7fa0f23d6f7b4d34925954fc40cfd06c : RotationBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(WorldOrientation);
        public override string CoherenceComponentName => "WorldOrientation";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override UnityEngine.Quaternion Value
        {
            get { return (UnityEngine.Quaternion)(coherenceSync.coherenceRotation); }
            set { coherenceSync.coherenceRotation = (UnityEngine.Quaternion)(value); }
        }

        protected override (UnityEngine.Quaternion value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((WorldOrientation)coherenceComponent).value;

            var simFrame = ((WorldOrientation)coherenceComponent).valueSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (WorldOrientation)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.value = Value;
            }
            else
            {
                update.value = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.valueSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new WorldOrientation();
        }    
    }
    
    [UnityEngine.Scripting.Preserve]
    public class Binding_5bdd7302d83b75e4ea45b36178bc0730_bf875ced8cfd46ffbfb5922a09ae4c50 : DeepPositionBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_5bdd7302d83b75e4ea45b36178bc0730_6882032591032927303);
        public override string CoherenceComponentName => "_5bdd7302d83b75e4ea45b36178bc0730_6882032591032927303";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override UnityEngine.Vector3 Value
        {
            get { return (UnityEngine.Vector3)(CastedUnityComponent.localPosition); }
            set { CastedUnityComponent.localPosition = (UnityEngine.Vector3)(value); }
        }

        protected override (UnityEngine.Vector3 value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_5bdd7302d83b75e4ea45b36178bc0730_6882032591032927303)coherenceComponent).position;

            var simFrame = ((_5bdd7302d83b75e4ea45b36178bc0730_6882032591032927303)coherenceComponent).positionSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_5bdd7302d83b75e4ea45b36178bc0730_6882032591032927303)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.position = Value;
            }
            else
            {
                update.position = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.positionSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _5bdd7302d83b75e4ea45b36178bc0730_6882032591032927303();
        }    
    }
    
    [UnityEngine.Scripting.Preserve]
    public class Binding_5bdd7302d83b75e4ea45b36178bc0730_b8b2ee246d8c4258a590e281663b0aab : DeepRotationBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_5bdd7302d83b75e4ea45b36178bc0730_6882032591032927303);
        public override string CoherenceComponentName => "_5bdd7302d83b75e4ea45b36178bc0730_6882032591032927303";
        public override uint FieldMask => 0b00000000000000000000000000000010;

        public override UnityEngine.Quaternion Value
        {
            get { return (UnityEngine.Quaternion)(CastedUnityComponent.localRotation); }
            set { CastedUnityComponent.localRotation = (UnityEngine.Quaternion)(value); }
        }

        protected override (UnityEngine.Quaternion value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_5bdd7302d83b75e4ea45b36178bc0730_6882032591032927303)coherenceComponent).rotation;

            var simFrame = ((_5bdd7302d83b75e4ea45b36178bc0730_6882032591032927303)coherenceComponent).rotationSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_5bdd7302d83b75e4ea45b36178bc0730_6882032591032927303)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.rotation = Value;
            }
            else
            {
                update.rotation = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.rotationSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _5bdd7302d83b75e4ea45b36178bc0730_6882032591032927303();
        }    
    }
    
    [UnityEngine.Scripting.Preserve]
    public class Binding_5bdd7302d83b75e4ea45b36178bc0730_9c0ab52654a144928c7afe9c0808d6b9 : DeepPositionBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_5bdd7302d83b75e4ea45b36178bc0730_8161195957959173761);
        public override string CoherenceComponentName => "_5bdd7302d83b75e4ea45b36178bc0730_8161195957959173761";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override UnityEngine.Vector3 Value
        {
            get { return (UnityEngine.Vector3)(CastedUnityComponent.localPosition); }
            set { CastedUnityComponent.localPosition = (UnityEngine.Vector3)(value); }
        }

        protected override (UnityEngine.Vector3 value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_5bdd7302d83b75e4ea45b36178bc0730_8161195957959173761)coherenceComponent).position;

            var simFrame = ((_5bdd7302d83b75e4ea45b36178bc0730_8161195957959173761)coherenceComponent).positionSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_5bdd7302d83b75e4ea45b36178bc0730_8161195957959173761)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.position = Value;
            }
            else
            {
                update.position = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.positionSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _5bdd7302d83b75e4ea45b36178bc0730_8161195957959173761();
        }    
    }
    
    [UnityEngine.Scripting.Preserve]
    public class Binding_5bdd7302d83b75e4ea45b36178bc0730_c9d854a0318349459db8e10db0bb98cc : DeepRotationBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_5bdd7302d83b75e4ea45b36178bc0730_8161195957959173761);
        public override string CoherenceComponentName => "_5bdd7302d83b75e4ea45b36178bc0730_8161195957959173761";
        public override uint FieldMask => 0b00000000000000000000000000000010;

        public override UnityEngine.Quaternion Value
        {
            get { return (UnityEngine.Quaternion)(CastedUnityComponent.localRotation); }
            set { CastedUnityComponent.localRotation = (UnityEngine.Quaternion)(value); }
        }

        protected override (UnityEngine.Quaternion value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_5bdd7302d83b75e4ea45b36178bc0730_8161195957959173761)coherenceComponent).rotation;

            var simFrame = ((_5bdd7302d83b75e4ea45b36178bc0730_8161195957959173761)coherenceComponent).rotationSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_5bdd7302d83b75e4ea45b36178bc0730_8161195957959173761)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.rotation = Value;
            }
            else
            {
                update.rotation = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.rotationSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _5bdd7302d83b75e4ea45b36178bc0730_8161195957959173761();
        }    
    }
    
    [UnityEngine.Scripting.Preserve]
    public class Binding_5bdd7302d83b75e4ea45b36178bc0730_02b2260dc8b849b8b5e9963986f62da8 : DeepRotationBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_5bdd7302d83b75e4ea45b36178bc0730_4509086355188942050);
        public override string CoherenceComponentName => "_5bdd7302d83b75e4ea45b36178bc0730_4509086355188942050";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override UnityEngine.Quaternion Value
        {
            get { return (UnityEngine.Quaternion)(CastedUnityComponent.localRotation); }
            set { CastedUnityComponent.localRotation = (UnityEngine.Quaternion)(value); }
        }

        protected override (UnityEngine.Quaternion value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_5bdd7302d83b75e4ea45b36178bc0730_4509086355188942050)coherenceComponent).rotation;

            var simFrame = ((_5bdd7302d83b75e4ea45b36178bc0730_4509086355188942050)coherenceComponent).rotationSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_5bdd7302d83b75e4ea45b36178bc0730_4509086355188942050)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.rotation = Value;
            }
            else
            {
                update.rotation = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.rotationSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _5bdd7302d83b75e4ea45b36178bc0730_4509086355188942050();
        }    
    }
    
    [UnityEngine.Scripting.Preserve]
    public class Binding_5bdd7302d83b75e4ea45b36178bc0730_61f6dfe668dd44229717ef63486e3f0f : DeepPositionBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_5bdd7302d83b75e4ea45b36178bc0730_4509086355188942050);
        public override string CoherenceComponentName => "_5bdd7302d83b75e4ea45b36178bc0730_4509086355188942050";
        public override uint FieldMask => 0b00000000000000000000000000000010;

        public override UnityEngine.Vector3 Value
        {
            get { return (UnityEngine.Vector3)(CastedUnityComponent.localPosition); }
            set { CastedUnityComponent.localPosition = (UnityEngine.Vector3)(value); }
        }

        protected override (UnityEngine.Vector3 value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_5bdd7302d83b75e4ea45b36178bc0730_4509086355188942050)coherenceComponent).position;

            var simFrame = ((_5bdd7302d83b75e4ea45b36178bc0730_4509086355188942050)coherenceComponent).positionSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_5bdd7302d83b75e4ea45b36178bc0730_4509086355188942050)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.position = Value;
            }
            else
            {
                update.position = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.positionSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _5bdd7302d83b75e4ea45b36178bc0730_4509086355188942050();
        }    
    }
    
    [UnityEngine.Scripting.Preserve]
    public class Binding_5bdd7302d83b75e4ea45b36178bc0730_2961164f6f374356887a144f967c69c2 : DeepRotationBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_5bdd7302d83b75e4ea45b36178bc0730_7583829343254099563);
        public override string CoherenceComponentName => "_5bdd7302d83b75e4ea45b36178bc0730_7583829343254099563";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override UnityEngine.Quaternion Value
        {
            get { return (UnityEngine.Quaternion)(CastedUnityComponent.localRotation); }
            set { CastedUnityComponent.localRotation = (UnityEngine.Quaternion)(value); }
        }

        protected override (UnityEngine.Quaternion value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_5bdd7302d83b75e4ea45b36178bc0730_7583829343254099563)coherenceComponent).rotation;

            var simFrame = ((_5bdd7302d83b75e4ea45b36178bc0730_7583829343254099563)coherenceComponent).rotationSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_5bdd7302d83b75e4ea45b36178bc0730_7583829343254099563)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.rotation = Value;
            }
            else
            {
                update.rotation = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.rotationSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _5bdd7302d83b75e4ea45b36178bc0730_7583829343254099563();
        }    
    }
    
    [UnityEngine.Scripting.Preserve]
    public class Binding_5bdd7302d83b75e4ea45b36178bc0730_9bc7b59664fc48778376f8166f71cc79 : DeepPositionBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_5bdd7302d83b75e4ea45b36178bc0730_7583829343254099563);
        public override string CoherenceComponentName => "_5bdd7302d83b75e4ea45b36178bc0730_7583829343254099563";
        public override uint FieldMask => 0b00000000000000000000000000000010;

        public override UnityEngine.Vector3 Value
        {
            get { return (UnityEngine.Vector3)(CastedUnityComponent.localPosition); }
            set { CastedUnityComponent.localPosition = (UnityEngine.Vector3)(value); }
        }

        protected override (UnityEngine.Vector3 value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_5bdd7302d83b75e4ea45b36178bc0730_7583829343254099563)coherenceComponent).position;

            var simFrame = ((_5bdd7302d83b75e4ea45b36178bc0730_7583829343254099563)coherenceComponent).positionSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_5bdd7302d83b75e4ea45b36178bc0730_7583829343254099563)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.position = Value;
            }
            else
            {
                update.position = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.positionSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _5bdd7302d83b75e4ea45b36178bc0730_7583829343254099563();
        }    
    }
    
    [UnityEngine.Scripting.Preserve]
    public class Binding_5bdd7302d83b75e4ea45b36178bc0730_396e1519a10943c1928599ad987014a5 : DeepPositionBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_5bdd7302d83b75e4ea45b36178bc0730_5732756931578646146);
        public override string CoherenceComponentName => "_5bdd7302d83b75e4ea45b36178bc0730_5732756931578646146";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override UnityEngine.Vector3 Value
        {
            get { return (UnityEngine.Vector3)(CastedUnityComponent.localPosition); }
            set { CastedUnityComponent.localPosition = (UnityEngine.Vector3)(value); }
        }

        protected override (UnityEngine.Vector3 value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_5bdd7302d83b75e4ea45b36178bc0730_5732756931578646146)coherenceComponent).position;

            var simFrame = ((_5bdd7302d83b75e4ea45b36178bc0730_5732756931578646146)coherenceComponent).positionSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_5bdd7302d83b75e4ea45b36178bc0730_5732756931578646146)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.position = Value;
            }
            else
            {
                update.position = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.positionSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _5bdd7302d83b75e4ea45b36178bc0730_5732756931578646146();
        }    
    }
    
    [UnityEngine.Scripting.Preserve]
    public class Binding_5bdd7302d83b75e4ea45b36178bc0730_13b196d29a994535bd39ad5e6ba7e170 : DeepRotationBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_5bdd7302d83b75e4ea45b36178bc0730_5732756931578646146);
        public override string CoherenceComponentName => "_5bdd7302d83b75e4ea45b36178bc0730_5732756931578646146";
        public override uint FieldMask => 0b00000000000000000000000000000010;

        public override UnityEngine.Quaternion Value
        {
            get { return (UnityEngine.Quaternion)(CastedUnityComponent.localRotation); }
            set { CastedUnityComponent.localRotation = (UnityEngine.Quaternion)(value); }
        }

        protected override (UnityEngine.Quaternion value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_5bdd7302d83b75e4ea45b36178bc0730_5732756931578646146)coherenceComponent).rotation;

            var simFrame = ((_5bdd7302d83b75e4ea45b36178bc0730_5732756931578646146)coherenceComponent).rotationSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_5bdd7302d83b75e4ea45b36178bc0730_5732756931578646146)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.rotation = Value;
            }
            else
            {
                update.rotation = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.rotationSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _5bdd7302d83b75e4ea45b36178bc0730_5732756931578646146();
        }    
    }
    
    [UnityEngine.Scripting.Preserve]
    public class Binding_5bdd7302d83b75e4ea45b36178bc0730_8099a7542cb24ccb83b95ae7179a7ca1 : DeepPositionBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_5bdd7302d83b75e4ea45b36178bc0730_8012800132177806423);
        public override string CoherenceComponentName => "_5bdd7302d83b75e4ea45b36178bc0730_8012800132177806423";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override UnityEngine.Vector3 Value
        {
            get { return (UnityEngine.Vector3)(CastedUnityComponent.localPosition); }
            set { CastedUnityComponent.localPosition = (UnityEngine.Vector3)(value); }
        }

        protected override (UnityEngine.Vector3 value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_5bdd7302d83b75e4ea45b36178bc0730_8012800132177806423)coherenceComponent).position;

            var simFrame = ((_5bdd7302d83b75e4ea45b36178bc0730_8012800132177806423)coherenceComponent).positionSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_5bdd7302d83b75e4ea45b36178bc0730_8012800132177806423)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.position = Value;
            }
            else
            {
                update.position = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.positionSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _5bdd7302d83b75e4ea45b36178bc0730_8012800132177806423();
        }    
    }
    
    [UnityEngine.Scripting.Preserve]
    public class Binding_5bdd7302d83b75e4ea45b36178bc0730_461f338b8c734ce983abf97676bbecb7 : DeepRotationBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_5bdd7302d83b75e4ea45b36178bc0730_8012800132177806423);
        public override string CoherenceComponentName => "_5bdd7302d83b75e4ea45b36178bc0730_8012800132177806423";
        public override uint FieldMask => 0b00000000000000000000000000000010;

        public override UnityEngine.Quaternion Value
        {
            get { return (UnityEngine.Quaternion)(CastedUnityComponent.localRotation); }
            set { CastedUnityComponent.localRotation = (UnityEngine.Quaternion)(value); }
        }

        protected override (UnityEngine.Quaternion value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_5bdd7302d83b75e4ea45b36178bc0730_8012800132177806423)coherenceComponent).rotation;

            var simFrame = ((_5bdd7302d83b75e4ea45b36178bc0730_8012800132177806423)coherenceComponent).rotationSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_5bdd7302d83b75e4ea45b36178bc0730_8012800132177806423)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.rotation = Value;
            }
            else
            {
                update.rotation = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.rotationSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _5bdd7302d83b75e4ea45b36178bc0730_8012800132177806423();
        }    
    }
    
    [UnityEngine.Scripting.Preserve]
    public class Binding_5bdd7302d83b75e4ea45b36178bc0730_76660978dca74700bfbe667fac09102a : DeepPositionBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_5bdd7302d83b75e4ea45b36178bc0730_851302204959615983);
        public override string CoherenceComponentName => "_5bdd7302d83b75e4ea45b36178bc0730_851302204959615983";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override UnityEngine.Vector3 Value
        {
            get { return (UnityEngine.Vector3)(CastedUnityComponent.localPosition); }
            set { CastedUnityComponent.localPosition = (UnityEngine.Vector3)(value); }
        }

        protected override (UnityEngine.Vector3 value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_5bdd7302d83b75e4ea45b36178bc0730_851302204959615983)coherenceComponent).position;

            var simFrame = ((_5bdd7302d83b75e4ea45b36178bc0730_851302204959615983)coherenceComponent).positionSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_5bdd7302d83b75e4ea45b36178bc0730_851302204959615983)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.position = Value;
            }
            else
            {
                update.position = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.positionSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _5bdd7302d83b75e4ea45b36178bc0730_851302204959615983();
        }    
    }
    
    [UnityEngine.Scripting.Preserve]
    public class Binding_5bdd7302d83b75e4ea45b36178bc0730_fce040d3520d40fa998d2d8a77cd1e1b : DeepRotationBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_5bdd7302d83b75e4ea45b36178bc0730_851302204959615983);
        public override string CoherenceComponentName => "_5bdd7302d83b75e4ea45b36178bc0730_851302204959615983";
        public override uint FieldMask => 0b00000000000000000000000000000010;

        public override UnityEngine.Quaternion Value
        {
            get { return (UnityEngine.Quaternion)(CastedUnityComponent.localRotation); }
            set { CastedUnityComponent.localRotation = (UnityEngine.Quaternion)(value); }
        }

        protected override (UnityEngine.Quaternion value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_5bdd7302d83b75e4ea45b36178bc0730_851302204959615983)coherenceComponent).rotation;

            var simFrame = ((_5bdd7302d83b75e4ea45b36178bc0730_851302204959615983)coherenceComponent).rotationSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_5bdd7302d83b75e4ea45b36178bc0730_851302204959615983)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.rotation = Value;
            }
            else
            {
                update.rotation = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.rotationSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _5bdd7302d83b75e4ea45b36178bc0730_851302204959615983();
        }    
    }

    [UnityEngine.Scripting.Preserve]
    public class CoherenceSync_5bdd7302d83b75e4ea45b36178bc0730 : CoherenceSyncBaked
    {
        private Entity entityId;
        private Logger logger = Coherence.Log.Log.GetLogger<CoherenceSync_5bdd7302d83b75e4ea45b36178bc0730>();
        
        
        
        private IClient client;
        private CoherenceBridge bridge;
        
        private readonly Dictionary<string, Binding> bakedValueBindings = new Dictionary<string, Binding>()
        {
            ["c752379bafee418caf50678f998f503d"] = new Binding_5bdd7302d83b75e4ea45b36178bc0730_c752379bafee418caf50678f998f503d(),
            ["7fa0f23d6f7b4d34925954fc40cfd06c"] = new Binding_5bdd7302d83b75e4ea45b36178bc0730_7fa0f23d6f7b4d34925954fc40cfd06c(),
            ["bf875ced8cfd46ffbfb5922a09ae4c50"] = new Binding_5bdd7302d83b75e4ea45b36178bc0730_bf875ced8cfd46ffbfb5922a09ae4c50(),
            ["b8b2ee246d8c4258a590e281663b0aab"] = new Binding_5bdd7302d83b75e4ea45b36178bc0730_b8b2ee246d8c4258a590e281663b0aab(),
            ["9c0ab52654a144928c7afe9c0808d6b9"] = new Binding_5bdd7302d83b75e4ea45b36178bc0730_9c0ab52654a144928c7afe9c0808d6b9(),
            ["c9d854a0318349459db8e10db0bb98cc"] = new Binding_5bdd7302d83b75e4ea45b36178bc0730_c9d854a0318349459db8e10db0bb98cc(),
            ["02b2260dc8b849b8b5e9963986f62da8"] = new Binding_5bdd7302d83b75e4ea45b36178bc0730_02b2260dc8b849b8b5e9963986f62da8(),
            ["61f6dfe668dd44229717ef63486e3f0f"] = new Binding_5bdd7302d83b75e4ea45b36178bc0730_61f6dfe668dd44229717ef63486e3f0f(),
            ["2961164f6f374356887a144f967c69c2"] = new Binding_5bdd7302d83b75e4ea45b36178bc0730_2961164f6f374356887a144f967c69c2(),
            ["9bc7b59664fc48778376f8166f71cc79"] = new Binding_5bdd7302d83b75e4ea45b36178bc0730_9bc7b59664fc48778376f8166f71cc79(),
            ["396e1519a10943c1928599ad987014a5"] = new Binding_5bdd7302d83b75e4ea45b36178bc0730_396e1519a10943c1928599ad987014a5(),
            ["13b196d29a994535bd39ad5e6ba7e170"] = new Binding_5bdd7302d83b75e4ea45b36178bc0730_13b196d29a994535bd39ad5e6ba7e170(),
            ["8099a7542cb24ccb83b95ae7179a7ca1"] = new Binding_5bdd7302d83b75e4ea45b36178bc0730_8099a7542cb24ccb83b95ae7179a7ca1(),
            ["461f338b8c734ce983abf97676bbecb7"] = new Binding_5bdd7302d83b75e4ea45b36178bc0730_461f338b8c734ce983abf97676bbecb7(),
            ["76660978dca74700bfbe667fac09102a"] = new Binding_5bdd7302d83b75e4ea45b36178bc0730_76660978dca74700bfbe667fac09102a(),
            ["fce040d3520d40fa998d2d8a77cd1e1b"] = new Binding_5bdd7302d83b75e4ea45b36178bc0730_fce040d3520d40fa998d2d8a77cd1e1b(),
        };
        
        private Dictionary<string, Action<CommandBinding, CommandsHandler>> bakedCommandBindings = new Dictionary<string, Action<CommandBinding, CommandsHandler>>();
        
        public CoherenceSync_5bdd7302d83b75e4ea45b36178bc0730()
        {
        }
        
        public override Binding BakeValueBinding(Binding valueBinding)
        {
            if (bakedValueBindings.TryGetValue(valueBinding.guid, out var bakedBinding))
            {
                valueBinding.CloneTo(bakedBinding);
                return bakedBinding;
            }
            
            return null;
        }
        
        public override void BakeCommandBinding(CommandBinding commandBinding, CommandsHandler commandsHandler)
        {
            if (bakedCommandBindings.TryGetValue(commandBinding.guid, out var commandBindingBaker))
            {
                commandBindingBaker.Invoke(commandBinding, commandsHandler);
            }
        }
        
        public override void ReceiveCommand(IEntityCommand command)
        {
            switch (command)
            {
                default:
                    logger.Warning($"CoherenceSync_5bdd7302d83b75e4ea45b36178bc0730 Unhandled command: {command.GetType()}.");
                    break;
            }
        }
        
        public override List<ICoherenceComponentData> CreateEntity(bool usesLodsAtRuntime, string archetypeName, AbsoluteSimulationFrame simFrame)
        {
            if (!usesLodsAtRuntime)
            {
                return null;
            }
            
            if (Archetypes.IndexForName.TryGetValue(archetypeName, out int archetypeIndex))
            {
                var components = new List<ICoherenceComponentData>()
                {
                    new ArchetypeComponent
                    {
                        index = archetypeIndex,
                        indexSimulationFrame = simFrame,
                        FieldsMask = 0b1
                    }
                };

                return components;
            }
    
            logger.Warning($"Unable to find archetype {archetypeName} in dictionary. Please, bake manually (coherence > Bake)");
            
            return null;
        }
        
        public override void Dispose()
        {
        }
        
        public override void Initialize(Entity entityId, CoherenceBridge bridge, IClient client, CoherenceInput input, Logger logger)
        {
            this.logger = logger.With<CoherenceSync_5bdd7302d83b75e4ea45b36178bc0730>();
            this.bridge = bridge;
            this.entityId = entityId;
            this.client = client;        
        }
    }

}